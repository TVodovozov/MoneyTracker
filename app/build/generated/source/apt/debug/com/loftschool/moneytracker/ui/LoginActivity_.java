//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.1.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//

package com.loftschool.moneytracker.ui;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.ActivityCompat;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.google.android.gms.common.SignInButton;
import com.loftschool.moneytracker.R;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.UiThreadExecutor;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.builder.PostActivityStarter;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class LoginActivity_
    extends LoginActivity
    implements HasViews, OnViewChangedListener
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(R.layout.login_activity);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static LoginActivity_.IntentBuilder_ intent(Context context) {
        return new LoginActivity_.IntentBuilder_(context);
    }

    public static LoginActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new LoginActivity_.IntentBuilder_(fragment);
    }

    public static LoginActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new LoginActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        this.loginLayout = ((RelativeLayout) hasViews.findViewById(R.id.login_layout_root));
        this.enterLogin = ((EditText) hasViews.findViewById(R.id.login_enter_login));
        this.textLogin = ((TextView) hasViews.findViewById(R.id.login_text_login));
        this.enterPassword = ((EditText) hasViews.findViewById(R.id.login_enter_password));
        this.textPassword = ((TextView) hasViews.findViewById(R.id.login_text_password));
        this.btnRegistration = ((Button) hasViews.findViewById(R.id.login_btn_registration));
        this.btnCanсel = ((Button) hasViews.findViewById(R.id.login_btn_canсel));
        this.newRegistration = ((Button) hasViews.findViewById(R.id.auth_btn_new_registration));
        this.signInButton = ((SignInButton) hasViews.findViewById(R.id.sign_in_button));
        if (this.btnCanсel!= null) {
            this.btnCanсel.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    LoginActivity_.this.onLoginCancelClick();
                }
            }
            );
        }
        if (this.btnRegistration!= null) {
            this.btnRegistration.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    LoginActivity_.this.loginUser();
                }
            }
            );
        }
        if (this.newRegistration!= null) {
            this.newRegistration.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    LoginActivity_.this.newRegistrationUser();
                }
            }
            );
        }
        if (this.signInButton!= null) {
            this.signInButton.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    LoginActivity_.this.loginGoogleWithPlus();
                }
            }
            );
        }
    }

    @Override
    void navigateToMainScreen() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LoginActivity_.super.navigateToMainScreen();
            }
        }
        , 0L);
    }

    @Override
    void navigateToRegistrationScreen() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LoginActivity_.super.navigateToRegistrationScreen();
            }
        }
        , 0L);
    }

    @Override
    void showLoginWrong() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LoginActivity_.super.showLoginWrong();
            }
        }
        , 0L);
    }

    @Override
    void showPasswordWrong() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LoginActivity_.super.showPasswordWrong();
            }
        }
        , 0L);
    }

    @Override
    void showError() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LoginActivity_.super.showError();
            }
        }
        , 0L);
    }

    @Override
    void showUnknownError() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LoginActivity_.super.showUnknownError();
            }
        }
        , 0L);
    }

    @Override
    void showGoogleError() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LoginActivity_.super.showGoogleError();
            }
        }
        , 0L);
    }

    @Override
    void showRegistrationErrorLogin() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LoginActivity_.super.showRegistrationErrorLogin();
            }
        }
        , 0L);
    }

    @Override
    void showRegistrationErrorPassword() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                LoginActivity_.super.showRegistrationErrorPassword();
            }
        }
        , 0L);
    }

    @Override
    void userLogin(final String login, final String password) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0L, "") {

            @Override
            public void execute() {
                try {
                    LoginActivity_.super.userLogin(login, password);
                } catch (final Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }
        }
        );
    }

    @Override
    public void logInWithGoogle(final Intent data) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0L, "") {

            @Override
            public void execute() {
                try {
                    LoginActivity_.super.logInWithGoogle(data);
                } catch (final Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }
        }
        );
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<LoginActivity_.IntentBuilder_>
    {
        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, LoginActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), LoginActivity_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), LoginActivity_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public PostActivityStarter startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent, requestCode, lastOptions);
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                    } else {
                        context.startActivity(intent, lastOptions);
                    }
                }
            }
            return new PostActivityStarter(context);
        }
    }
}
